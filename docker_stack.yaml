version: '3.4'

networks:
  backend:
    driver: overlay
    
  oauth:
    driver: overlay

services:

  rest:
    hostname: weskit
    image: ${WESKIT_IMAGE}
    secrets:
      - weskit.key
      - weskit.crt
      - keycloak.pem

    environment:
      WESKIT_CONFIG: /home/weskit/config.yaml
      WESKIT_LOG_CONFIG:
      WESKIT_VALIDATION_CONFIG:
      WESKIT_DATABASE_URL: mongodb://database:27017
      WESKIT_DATA: /weskit_data
      RESULT_BACKEND: redis://result_broker:6379
      BROKER_URL: redis://result_broker:6379
      FLASK_APP: weskit
      REQUESTS_CA_BUNDLE: /run/secrets/keycloak.pem
    volumes:
      - ${WESKIT_DATA}:/weskit_data
      - ${WESKIT_CONFIG}:/home/weskit/config.yaml:ro
      - ${SHARED_FILESYSTEM_ROOT}:/data
      - ./weskit:/weskit/weskit:ro
    networks:
      - backend
      - oauth
    working_dir: /weskit
    entrypoint: ["bash", "-i", "-c"]
    command: ["conda activate weskit && pip install ./ && ln -s /run/secrets/weskit.* /weskit/uWSGI_Server/certs/  && uwsgi --ini /weskit/uWSGI_Server/uwsgi.ini"]
    ports:
      - 5000:5000

  database:
    image: mongo:4.2.3
    volumes:
      - ${SHARED_FILESYSTEM_ROOT}:/var/lib/mongodb
    networks:
      - backend
    ports:
      - 27017:27017

  result_broker:
    image: redis:6.0.1-alpine
    volumes:
      - ${REDIS_CONFIG}:/usr/local/etc/redis/redis.conf:ro
      - ${SHARED_FILESYSTEM_ROOT}:/data
    networks:
      - backend
    ports:
      - 6379:6379

  # Workers are probably better started more dynamically, e.g. in LSF cluster, Docker swarm or Kubernetes.
  worker1:
    image: ${WESKIT_IMAGE}
    environment:
      RESULT_BACKEND: redis://result_broker:6379
      BROKER_URL: redis://result_broker:6379
    working_dir: /weskit
    entrypoint: ["bash", "-i", "-c"]
    command: ["conda activate weskit; celery worker --loglevel DEBUG --concurrency 1 --app weskit.tasks.celery_worker.celery_app"]
    volumes:
      - ${WESKIT_DATA}:/weskit_data
      - ${SHARED_FILESYSTEM_ROOT}:/data
    networks:
      - backend

  ## Login System

  keycloak:
    image: quay.io/keycloak/keycloak:12.0.2
    environment:
     # KEYCLOAK_USER: admin
     # KEYCLOAK_PASSWORD: admin
      DB_USER: keycloak
      DB_PASSWORD: secret_password
      KEYCLOAK_FRONTEND_URL: https://localhost:8443/auth
      DB_VENDOR: mysql
      DB_PORT: 3306
      DB_ADDR: keycloak-database

    working_dir: /weskit
    # Add Realm to non existing DB
    #volumes:
    #  - ./WESkit_realm.json:/tmp/weskit-realm.json:ro

    networks:
      - oauth
    ports:
      - 8080:8080
      - 8443:8443
    secrets:
      - source: keycloak.key
        target: /etc/x509/https/tls.key
      - source: keycloak.crt
        target: /etc/x509/https/tls.crt
      
  # keycloak database
  keycloak-database:
    image: mysql

    environment:
       MYSQL_DATABASE: keycloak
       MYSQL_USER: keycloak
       MYSQL_PASSWORD: secret_password
       MYSQL_ROOT_PASSWORD: secret_root_password
    volumes:
      - ./config/keycloak_schema.sql:/docker-entrypoint-initdb.d/test.sql
    networks:
      - oauth


secrets:
  weskit.key:
    file: uWSGI_Server/certs/weskit.key
  weskit.crt:
    file: uWSGI_Server/certs/weskit.crt
  keycloak.key:
    file: uWSGI_Server/certs/weskit.key
  keycloak.crt:
    file: uWSGI_Server/certs/weskit.crt
  keycloak.pem:
    file: uWSGI_Server/certs/weskit.pem
